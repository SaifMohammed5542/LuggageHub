/* Base Styles */
.container {
    position: relative;
    min-height: 100vh;
    overflow: hidden;
    background: linear-gradient(135deg, #0f172a 0%, #581c87 50%, #0f172a 100%);
    display: flex; /* Use flex to center content vertically */
    align-items: center; /* Center content vertically */
    justify-content: center; /* Center content horizontally */
    padding: 24px; /* Add base padding for small screens */
}

.backgroundOverlay {
    position: absolute;
    inset: 0;
    overflow: hidden;
    /* Ensure blobs extend outside for blur effect */
}

.backgroundBlob1 {
    position: absolute;
    top: -50%;
    left: -50%;
    width: 100%; /* Relative to parent, good */
    height: 100%; /* Relative to parent, good */
    background: linear-gradient(45deg, rgba(37, 99, 235, 0.2), rgba(147, 51, 234, 0.2));
    border-radius: 50%;
    filter: blur(80px);
    animation: float 8s ease-in-out infinite;
    transform-origin: center; /* Ensures animation works consistently */
}

.backgroundBlob2 {
    position: absolute;
    bottom: -50%;
    right: -50%;
    width: 100%; /* Relative to parent, good */
    height: 100%; /* Relative to parent, good */
    background: linear-gradient(225deg, rgba(6, 182, 212, 0.2), rgba(37, 99, 235, 0.2));
    border-radius: 50%;
    filter: blur(80px);
    animation: float-delayed 10s ease-in-out infinite;
    transform-origin: center; /* Ensures animation works consistently */
}

.patternOverlay {
    position: absolute;
    inset: 0;
    opacity: 0.1;
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.03'%3E%3Ccircle cx='7' cy='7' r='1'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
    background-size: 60px 60px;
}

.mainContent {
    position: relative;
    z-index: 10;
    /* min-height: 100vh; */ /* Removed as container now handles centering */
    padding: 80px 0; /* Vertical padding, horizontal padding handled by contentWrapper */
    width: 100%; /* Ensure it takes full width of container's padding */
}

.contentWrapper {
    max-width: 1400px; /* Max width for large screens */
    width: 100%; /* Ensure it fills available space up to max-width */
    margin: 0 auto; /* Center content wrapper */
    padding: 0 24px; /* Internal padding for content, moved from mainContent */
}

.gridContainer {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Start with a flexible 2-column layout */
    gap: 48px;
    align-items: center;
}

.leftContent {
    display: flex;
    flex-direction: column;
    gap: 32px;
    transition: all 1s ease-out;
    /* Added initial visibility state to handle animation */
    opacity: 0;
    transform: translateX(-50px);
}

.leftContent.visible {
    opacity: 1;
    transform: translateX(0);
}

/* Removed hidden-left and hidden-right as transitions will handle initial state */


.contentSection {
    display: flex;
    flex-direction: column;
    gap: 24px;
}

.badge {
    display: inline-flex;
    align-items: center;
    padding: 8px 16px;
    background-color: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border-radius: 50px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    width: fit-content;
    /* flex-shrink: 0; Prevent badge from shrinking */
}

.badgeText {
    color: #22d3ee;
    font-size: 14px;
    font-weight: 500;
}

.mainHeading {
    font-size: clamp(2.5rem, 6vw, 4.5rem); /* Slightly adjusted clamp values for better scaling */
    font-weight: 800;
    color: white;
    line-height: 1.2;
    margin: 0;
    /* Max width for text block */
    max-width: 600px;
}

.gradientText {
    background: linear-gradient(45deg, #22d3ee, #3b82f6);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    /* display: block; Keep as-is if you want line break */
}

.subtitle {
    font-size: clamp(1rem, 2vw, 1.25rem); /* Slightly adjusted clamp values */
    color: #d1d5db;
    line-height: 1.6;
    max-width: 600px; /* Constrain max width for readability */
    margin: 0;
}

.buttonContainer {
    display: flex;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
    gap: 16px;
}

.primaryButton,
.secondaryButton {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    padding: 16px 32px;
    font-weight: 600;
    font-size: 16px;
    border: none;
    border-radius: 16px;
    cursor: pointer;
    transition: transform 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
    flex-grow: 1; /* Allow buttons to grow and take available space */
    min-width: 180px; /* Ensure a minimum width */
}

.primaryButton {
    background: linear-gradient(45deg, #06b6d4, #2563eb);
    color: white;
}

.primaryButton:hover {
    transform: translateY(-3px); /* Stronger lift effect */
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
}

.secondaryButton {
    background-color: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.secondaryButton:hover {
    background-color: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
}

.nearestButton {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 12px 24px;
    background: linear-gradient(45deg, #de0b0b, #059669);
    color: white;
    font-weight: 500;
    font-size: 16px;
    border: none;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    width: fit-content; /* Keep fit-content for desktop */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
}

.nearestButton:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
}

.nearestButton.loading {
    opacity: 0.8;
    cursor: not-allowed;
}

.buttonIcon {
    width: 20px;
    height: 20px;
}

.spin {
    animation: spin 1s linear infinite;
}

.stationList {
    background-color: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border-radius: 16px;
    padding: 24px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
}

.stationHeading {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 20px;
    font-weight: 600;
    color: white;
    margin-bottom: 16px;
}

.stationIcon {
    width: 20px;
    height: 20px;
    color: #22d3ee;
}

.stationContainer {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.stationItem {
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 12px;
    padding: 16px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

.stationItem:hover {
    background-color: rgba(255, 255, 255, 0.08);
    border-color: rgba(255, 255, 255, 0.3);
}

.stationInfo {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
    align-items: center; /* Vertically align items */
    justify-content: space-between;
    gap: 12px; /* Smaller gap for wrapped items */
}

.stationName {
    font-weight: 600;
    color: white;
    margin-bottom: 4px;
    font-size: 16px;
    flex-grow: 1; /* Allow name to take more space */
}

.stationLocation {
    color: #d1d5db;
    font-size: 14px;
    margin: 0;
}

.directionsButton {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    background: linear-gradient(45deg, #0d9488, #06b6d4);
    color: white;
    font-size: 14px;
    font-weight: 500;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: transform 0.3s ease, opacity 0.3s ease;
    flex-shrink: 0; /* Prevent button from shrinking */
}

.directionsButton:hover {
    transform: translateY(-2px);
    opacity: 0.9;
}

.directionIcon {
    width: 16px;
    height: 16px;
}

.rightContent {
    position: relative;
    display: flex; /* Use flex to center visual content */
    align-items: center;
    justify-content: center;
    min-height: 400px; /* Ensure some height even if content is small */
    transition: all 1s ease-out 0.3s;
    /* Added initial visibility state to handle animation */
    opacity: 0;
    transform: translateX(50px);
}

.rightContent.visible {
    opacity: 1;
    transform: translateX(0);
}


.visualContainer {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%; /* Ensure it expands to available space */
    max-width: 500px; /* Limit max width for visual block */
}

.floatingElement1 {
    position: absolute;
    top: -2rem;
    left: -24px;
    width: 96px;
    height: 96px;
    background: linear-gradient(45deg, #22d3ee, #3b82f6);
    border-radius: 16px;
    opacity: 0.8;
    animation: float 6s ease-in-out infinite;
    z-index: -1; /* Place behind main visual */
}

.floatingElement2 {
    position: absolute;
    bottom: -2rem;
    right: 100px;
    width: 128px;
    height: 128px;
    background: linear-gradient(45deg, #a855f7, #ec4899);
    border-radius: 50%;
    opacity: 0.6;
    animation: float-delayed 8s ease-in-out infinite;
    z-index: -1; /* Place behind main visual */
}

.mainVisual {
    position: relative;
    background-color: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border-radius: 24px;
    /* bottom: 1rem; Removed this, positioning relative to flex container is better */
    padding: 32px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
    width: 100%; /* Occupy full width of visualContainer */
    max-width: 500px; /* Control max size of the visual card */
    box-sizing: border-box; /* Include padding in width */
}

.visualContent {
    background: linear-gradient(135deg, #1e293b, #0f172a);
    border-radius: 16px;
    padding: 32px;
    text-align: center;
    width: 100%; /* Occupy full width of mainVisual padding */
    box-sizing: border-box; /* Include padding in width */
}

.iconContainer {
    width: 96px;
    height: 96px;
    background: linear-gradient(45deg, #22d3ee, #3b82f6);
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 24px;
}

.mainIcon {
    width: 48px;
    height: 48px;
    color: white;
}

.visualHeading {
    font-size: 24px;
    font-weight: 700;
    color: white;
    margin-bottom: 16px;
}

.visualSubtext {
    color: #d1d5db;
    margin-bottom: 24px;
    line-height: 1.5;
}

.featureGrid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 16px;
    text-align: center;
}

.featureItem {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
}

.featureIcon {
    width: 48px;
    height: 48px;
    background-color: rgba(34, 211, 238, 0.2);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
}

.featureText {
    color: #9ca3af;
    font-size: 12px;
    margin: 0;
}

/* Scroll to top button - consider moving to a separate component if always present */
/* Add these styles to your existing BannerOne.css file */

.scrollToTopButton {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #a78bfa; /* Soft purple, matches your theme */
    color: white;
    border: none;
    border-radius: 50%; /* Makes it circular */
    width: 50px;
    height: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease, background-color 0.3s ease;
    z-index: 999; /* Ensure it's above other content */
}

.scrollToTopButton:hover {
    background-color: #8b5cf6; /* Slightly darker purple on hover */
    transform: translateY(-2px); /* Subtle lift effect */
}

.scrollToTopIcon {
    width: 24px; /* Size of the Lucide icon */
    height: 24px;
}

/* You already have the keyframes in the JSX <style> block,
   but for better organization, you could move them here too if you prefer.
   I've left them in JSX as they were, but noting it for best practices. */
/* @keyframes spin { ... } */
/* @keyframes float { ... } */
/* @keyframes float-delayed { ... } */
/* .animate-float { ... } */
/* .animate-float-delayed { ... } */

/* Keyframe Animations - No change, they are fine */
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes float {
    0% {
        transform: translateY(0) translateX(0);
    }
    50% {
        transform: translateY(-20px) translateX(20px);
    }
    100% {
        transform: translateY(0) translateX(0);
    }
}

@keyframes float-delayed {
    0% {
        transform: translateY(0) translateX(0);
    }
    50% {
        transform: translateY(20px) translateX(-20px);
    }
    100% {
        transform: translateY(0) translateX(0);
    }
}

/* -------------------------------------
    📱 Media Queries for Responsiveness
------------------------------------- */

/* Default for screens smaller than 768px (common mobile breakpoint) */
@media (max-width: 767px) {
    .container {
        padding: 40px 16px; /* Adjust container padding for mobile */
        min-height: auto; /* Allow height to adjust to content */
    }

    .mainContent {
        padding: 0; /* Remove extra padding, contentWrapper handles it */
    }

    .contentWrapper {
        padding: 0; /* Remove inner padding, container handles it */
    }

    .gridContainer {
        grid-template-columns: 1fr; /* Stack columns on small screens */
        gap: 48px; /* Maintain gap between stacked sections */
    }

    .mainHeading {
        font-size: 300%; /* Larger fluid font for mobile heading */
        text-align:center; /* Center heading on mobile */
        max-width: none; /* Remove max-width constraint */
        font-weight:900;
    }

    .subtitle {
        font-size: clamp(1rem, 4vw, 1.125rem); /* Adjust subtitle font for mobile */
        text-align: center; /* Center subtitle on mobile */
        max-width: none; /* Remove max-width constraint */
    }

    .contentSection {
        align-items: center; /* Center badge, heading, subtitle */
        text-align: center;
    }

    .badge {
        margin: 0 auto; /* Center badge */
    }

    .buttonContainer {
        flex-direction: column; /* Stack buttons vertically */
        align-items: stretch; /* Stretch buttons to full width */
    }

    .primaryButton,
    .secondaryButton {
        width: 100%; /* Full width for stacked buttons */
        min-width: unset; /* Remove min-width constraint */
    }

    .nearestButton {
        width: 100%; /* Full width for nearest button */
        margin: 0 auto; /* Center button if it doesn't stretch */
    }

    .stationList {
        padding: 20px;
    }

    .stationHeading {
        justify-content: center; /* Center station heading */
    }

    .stationInfo {
        flex-direction: column; /* Stack station name/location and directions button */
        align-items: flex-start; /* Align text left */
        gap: 10px;
    }

    .directionsButton {
        width: 100%; /* Full width directions button */
        justify-content: center; /* Center text and icon */
        margin-top: 8px; /* Add some space above button */
    }

    .rightContent {
        min-height: auto; /* Allow visual content to define its height */
    }

    .visualContainer {
        max-width: 500px; /* Constrain visual container on mobile */
        margin: 0 auto; /* Center the visual container */
    }

    .mainVisual {
        padding: 24px;
        width: 100%; /* Take full width of visualContainer */
        max-width: none; /* Remove max width to allow 100% */
    }

    .visualContent {
        padding: 24px;
        width: 100%; /* Take full width of mainVisual */
    }

    .featureGrid {
        grid-template-columns: repeat(3, 1fr); /* 2 columns for features */
    }

    .floatingElement1,
    .floatingElement2 {
        display: none; /* Hide floating elements on very small screens */
    }

    .topButton {
        bottom: 16px;
        right: 16px;
        padding: 12px;
        width: 48px; /* Fixed size for mobile top button */
        height: 48px;
    }
    .topButtonIcon {
        width: 20px;
        height: 20px;
    }
}

/* Medium devices (tablets, 768px to 1024px) */
@media (min-width: 768px) and (max-width: 1024px) {
    .container {
        padding: 40px 24px;
    }

    .contentWrapper {
        padding: 0; /* Already centered by container flex and max-width */
    }

    .gridContainer {
        grid-template-columns: 1fr; /* Stack columns on tablets too for better readability */
        gap: 60px; /* Larger gap when stacked */
    }

    .mainHeading {
        font-size: clamp(3rem, 6vw, 4rem); /* Adjust heading size for tablets */
        max-width: 700px; /* Give it a reasonable max-width */
        margin: 0 auto; /* Center it */
    }
    .subtitle {
        max-width: 700px; /* Give it a reasonable max-width */
        margin: 0 auto; /* Center it */
    }

    .contentSection {
        align-items: center; /* Center badge, heading, subtitle */
        text-align: center;
    }

    .badge {
        margin: 0 auto;
    }

    .buttonContainer {
        flex-direction: row; /* Keep buttons in a row if space allows */
        justify-content: center; /* Center them */
        flex-wrap: wrap; /* Allow wrap if necessary */
    }
    .primaryButton,
    .secondaryButton {
        flex-grow: unset; /* Don't force grow if row */
        width: auto; /* Let content define width */
        min-width: 200px; /* Ensure a decent size */
    }

    .nearestButton {
        margin: 0 auto; /* Center the button */
    }

    .stationHeading {
        justify-content: center; /* Center station heading */
    }

    .stationInfo {
        /* Keep as flex-start column if that's preferred, or row based on space */
        flex-direction: row; /* Allow row layout if it fits */
        align-items: center;
    }

    .directionsButton {
        width: auto; /* Let content define width */
        margin-top: 0;
    }

    .visualContainer {
        max-width: 450px; /* Keep max-width for visual on tablets */
        margin: 0 auto; /* Center the visual */
    }

    .mainVisual {
        width: 100%; /* Fill max-width of visualContainer */
    }

    .floatingElement1 {
        top: -1.5rem;
        left: -20px;
        width: 88px;
        height: 88px;
        display: block; /* Show on tablets */
    }

    .floatingElement2 {
        bottom: -1.5rem;
        right: 90px;
        width: 110px;
        height: 110px;
        display: block; /* Show on tablets */
    }
}


/* Large devices (laptops/desktops, 1025px to 1440px) */
@media (min-width: 1025px) and (max-width: 1440px) {
    .gridContainer {
        /* Adjusted grid to be more flexible */
        grid-template-columns: minmax(400px, 1fr) minmax(400px, 1fr); /* Flexible columns, min width 400px */
        gap: 60px; /* Larger gap for more space */
    }

    .mainHeading {
        font-size: clamp(3.5rem, 4.5vw, 4.5rem); /* Fine-tune clamp for large screens */
    }

    .subtitle {
        font-size: clamp(1.125rem, 1.5vw, 1.25rem);
    }

    .mainVisual {
        max-width: 480px; /* Slightly larger max-width for visual */
    }

    .floatingElement1 {
        top: -2.5rem;
        left: -30px;
        width: 100px;
        height: 100px;
    }

    .floatingElement2 {
        bottom: -2.5rem;
        right: 110px;
        width: 130px;
        height: 130px;
    }
}

/* Extra large devices (large desktops, 1441px and up) */
@media (min-width: 1441px) {
    .gridContainer {
        grid-template-columns: minmax(500px, 1fr) minmax(500px, 1fr); /* Even more space for content */
        gap: 80px; /* Larger gap */
    }

    .mainHeading {
        font-size: 4.5rem; /* Max out at 4.5rem for huge screens */
    }
    .subtitle {
        font-size: 1.25rem; /* Max out at 1.25rem */
    }

    .mainVisual {
        max-width: 550px; /* Larger max-width for visual */
    }
}

/* General Hover Effects and Transitions */
.primaryButton:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
}

.secondaryButton:hover {
    background-color: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
}

.nearestButton:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
}

.stationItem:hover {
    background-color: rgba(255, 255, 255, 0.08);
    border-color: rgba(255, 255, 255, 0.3);
}

.directionsButton:hover {
    transform: translateY(-2px);
    opacity: 0.9;
}

/* Animations for initial visibility */
/* Already defined in JSX's style block, but adding here for clarity if you prefer external CSS */
/* @keyframes spin { ... } */
/* @keyframes float { ... } */
/* @keyframes float-delayed { ... } */

/*
.leftContent.visible {
    opacity: 1;
    transform: translateX(0);
}

.rightContent.visible {
    opacity: 1;
    transform: translateX(0);
}
*/